name: Run all tests, build documentation and publish docs

on:
  push:
    branches: "**"
    tags: "**"

  schedule:
    - cron: "0 8 * * 1"
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:

  build-docs:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.14']
    uses: ./.github/workflows/build_docs.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}

  push-docs:
    if: ${{ github.repository == 'FEniCS/ufl' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') )}}
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
        - name: Download built documentation artifact
          uses: actions/download-artifact@v4
          with:
              name: doc-ubuntu-latest-3.12

        - name: Checkout FEniCS/docs
          uses: actions/checkout@v5
          with:
            repository: "FEniCS/docs"
            path: "docs"
            ssh-key: "${{ secrets.SSH_GITHUB_DOCS_PRIVATE_KEY }}"
        
        - name: Set version name
          run: |
              echo "VERSION_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        
        - name: Copy documentation into repository
          run: |
            cd docs
            git rm -r --ignore-unmatch ufl/${{ env.VERSION_NAME }}
            mkdir -p ufl/${{ env.VERSION_NAME }}
            cp -r ../doc/build/html/* ufl/${{ env.VERSION_NAME }}
    
        - name: Commit and push documentation to FEniCS/docs
          run: |
              cd docs
              git config --global user.email "fenics@github.com"
              git config --global user.name "FEniCS GitHub Actions"
              git add --all
              git commit --allow-empty -m "Python FEniCS/ufl@${{ github.sha }}"
              git push
  run-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.14']

    uses: ./.github/workflows/pythonapp.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}

  upload-coverage:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:  
    - name: Download artifact from build-docs
      uses: actions/download-artifact@v4
      with:
        name: coverage-ubuntu-latest-3.12
        path: ./junit/test-results

    - name: Install coveralls
      run: pip install coveralls

    - name: Upload to Coveralls
      if: ${{ github.repository == 'FEniCS/ufl' && github.head_ref == '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run:
        coveralls

